openapi: 3.0.0
info:
  title: List Management API
  version: 1.0.0
paths:
  /shopping-lists:
    get:
      summary: Get all lists
      responses:
        '200':
          description: lists of list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/List'
              examples:
                example1:
                  value:
                    - uuid: '1'
                      owner:
                        name: "pepega"
                        uuid: '1a2b3c4d-5e6f-7g8h-9i0j-1k2l3m4n5o6p'
                      name: 'Seznam 1'
                      users:
                        - uuid: '1'
                          name: 'Alice'
                        - uuid: '2'
                          name: 'Pepe'
                      items:
                        - uuid: '1'
                          name: 'Apples'
                          archived: false
                        - uuid: '2'
                          name: 'Bananas'
                          archived: true
                    - uuid: '2'
                      name: 'Seznam 4'
                      owner:
                        name: "pepega"
                        uuid: '1a2b3c4d-5e6f-7g8h-9i0j-1k2l3m4n5o6p'
                      users:
                        - uuid: '3'
                          name: 'Josef'
                        - uuid: '4'
                          name: 'Bob'
                      items:
                        - uuid: '3'
                          name: 'Andrej'
                          archived: false
                        - uuid: '4'
                          name: 'Notebooks'
                          archived: false
    post:
      summary: Create a new list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/List'
            example:
              name: 'New List'
              users:
                - id: '1'
                  name: 'Alice'
                - id: '2'
                  name: 'Honzik'
              items:
                - id: '1'
                  name: 'Item 1'
                  archived: false
      responses:
        '201':
          description: List created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
              example:
                id: '3'
                name: 'New List'
                users:
                  - id: '1'
                    name: 'Alice'
                  - id: '2'
                    name: 'Honzik'
                items:
                  - id: '1'
                    name: 'Item 1'
                    archived: false

  /shopping-list/{id}:
    get:
      summary: Get list by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: list by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
              example:
                id: '1'
                name: 'Seznam 1'
                owner:
                  name: "pepega"
                  uuid: '1a2b3c4d-5e6f-7g8h-9i0j-1k2l3m4n5o6p'
                users:
                  - uuid: '1'
                    name: 'Alice'
                  - uuid: '2'
                    name: 'Honzik'
                items:
                  - uuid: '1'
                    name: 'Apples'
                    archived: false
                  - uuid: '2'
                    name: 'Bananas'
                    archived: true
    post:
      summary: Update a list
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/List'
            example:
              name: 'Updated List Name'
              users:
                - id: '1'
                  name: 'Alice'
                  isOwner: true
                - id: '2'
                  name: 'Honzik'
                  isOwner: false
              items:
                - id: '1'
                  name: 'Oranges'
                  isCompleted: false
                - id: '2'
                  name: 'Grapes'
                  isCompleted: true
      responses:
        '200':
          description: List updated

    delete:
      summary: Delete a list by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: List deleted successfully
        '404':
          description: List not found

components:
  schemas:
    List:
      type: object
      required:
        - name
        - users
        - items
      properties:
        id:
          type: string
        name:
          type: string
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
        items:
          type: array
          items:
            $ref: '#/components/schemas/ListItem'

    User:
      type: object
      required:
        - uuid
        - name
      properties:
        uuid:
          type: string
        name:
          type: string

    ListItem:
      type: object
      required:
        - uuid
        - name
        - archived
      properties:
        id:
          type: string
        name:
          type: string
        isCompleted:
          type: boolean